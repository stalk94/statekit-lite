{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { useSyncExternalStore } from \"react\";\r\n\r\ntype ValueOrUpdater<T> = T | ((prev: T) => T);\r\n\r\nexport type ProxyState<T> = {\r\n    get: () => T;\r\n    set: (value: ValueOrUpdater<T>) => void;\r\n    update: (fn: (prev: T) => T) => void;\r\n    use: () => T;\r\n    watch: (fn: (newValue: T) => void) => () => void;\r\n} & (T extends object\r\n    ? {\r\n        [K in keyof T]: ProxyState<T[K]>;\r\n    }\r\n    : {});\r\n\r\ntype PersistConfig = boolean | { key: string };\r\ninterface StoreOptions {\r\n    persist?: PersistConfig\r\n    devtools?: boolean | { name: string }\r\n}\r\n\r\n\r\nfunction getByPath(obj: any, path: (string | number)[]): any {\r\n    return path.reduce((acc, key) => acc?.[key], obj);\r\n}\r\nfunction setByPath(obj: any, path: (string | number)[], val: any): any {\r\n    if (!path.length) return val;\r\n    const [key, ...rest] = path;\r\n    const isIndex = typeof key === \"number\" || /^\\d+$/.test(String(key));\r\n    const prev = obj ?? (isIndex ? [] : {});\r\n    const clone = Array.isArray(prev) ? [...prev] : { ...prev };\r\n    clone[key] = setByPath(prev[key], rest, val);\r\n    return clone;\r\n}\r\nfunction pathToString(path: (string | number)[]) {\r\n    return path.join(\".\");\r\n}\r\n\r\n\r\n\r\nexport function createStore<T extends object>(\r\n    initialValue: T,\r\n    options: StoreOptions = {}\r\n): ProxyState<T> {\r\n    const key =\r\n        typeof options.persist === \"object\"\r\n            ? options.persist.key\r\n            : options.persist === true\r\n                ? \"statekit-store-\" + Math.random().toString(36).slice(2)\r\n                : null;\r\n\r\n    let value: T = initialValue;\r\n    let devtools: any = null;\r\n    let lastUpdatedPath: string | null = null;\r\n\r\n    if (typeof window !== \"undefined\" && options.devtools) {\r\n        const ext = (window as any).__REDUX_DEVTOOLS_EXTENSION__;\r\n        if (ext) {\r\n            devtools = ext.connect({ name: typeof options.devtools === 'object' ? options.devtools.name ?? \"statekit\" : \"statekit\" });\r\n            devtools.init(value); // начальное значение\r\n        }\r\n    }\r\n    if (typeof window !== \"undefined\" && key) {\r\n        const stored = localStorage.getItem(key);\r\n        if (stored) {\r\n            try {\r\n                value = JSON.parse(stored);\r\n            } catch {\r\n                value = initialValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    const listeners = new Set<() => void>();\r\n    const watchers = new Map<string, Set<(val: any) => void>>();\r\n    const notify = () => listeners.forEach((l) => l());\r\n\r\n    const store = {\r\n        get: () => value,\r\n        set: (v: T) => {\r\n            value = v;\r\n\r\n            if (typeof window !== \"undefined\" && key) {\r\n                localStorage.setItem(key, JSON.stringify(value));\r\n            }\r\n            if (devtools) {\r\n                devtools.send({ type: `[set] ${lastUpdatedPath ?? \"unknown\"}` }, value);\r\n            }\r\n\r\n\r\n            notify();\r\n            watchers.forEach((fns, pathStr) => {\r\n                const path = pathStr.split(\".\");\r\n                const val = getByPath(value, path);\r\n                fns.forEach(fn => fn(val));\r\n            });\r\n        },\r\n        subscribe: (cb: () => void) => {\r\n            listeners.add(cb);\r\n            return () => listeners.delete(cb);\r\n        },\r\n    }\r\n\r\n    function createProxy(path: (string | number)[]): any {\r\n        const pathStr = pathToString(path);\r\n\r\n        const api = {\r\n            get: () => getByPath(store.get(), path),\r\n            set: (val: any) => {\r\n                const prev = getByPath(store.get(), path);\r\n                const next = typeof val === \"function\" ? val(prev) : val;\r\n                lastUpdatedPath = pathToString(path);\r\n                store.set(setByPath(store.get(), path, next));\r\n            },\r\n            update: (fn: (prev: any) => any) => {\r\n                const current = getByPath(store.get(), path);\r\n                const next = fn(current);\r\n                store.set(setByPath(store.get(), path, next));\r\n            },\r\n            use: () => useSyncExternalStore(store.subscribe, () =>\r\n                getByPath(store.get(), path)\r\n            ),\r\n            watch: (fn: (val: any) => void) => {\r\n                if (!watchers.has(pathStr)) {\r\n                    watchers.set(pathStr, new Set());\r\n                }\r\n                const set = watchers.get(pathStr)!;\r\n                set.add(fn);\r\n                return () => set.delete(fn);\r\n            },\r\n        };\r\n\r\n        return new Proxy(api, {\r\n            get(target, prop) {\r\n                if (prop in target) return (target as any)[prop];\r\n                return createProxy([...path, prop as string]);\r\n            }\r\n        });\r\n    }\r\n\r\n    return createProxy([]) as ProxyState<T>;\r\n}\r\n"],"mappings":"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","names":[]}